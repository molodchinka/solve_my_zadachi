#1

f=open('24_1.txt') #открываем данный нам файл.
s=f.readline() #считываем файл
kol=s.count('KOTIK') #Считаем количество подстрок "KOTIK" в файле
print(kol) #выводим наш результат


#2

f=open('24_2.txt')#открываем файл
s=f.readline()#считываем его
k=0#подключаем счетчик, он обязательно должен быть равен нулю
for i in range(len(s)-6):#проходимся по нашей строке, и отнимаем от длины строки длину нашего палиндрома, которая дана в условии
    st=s[i:i+6]#с помощью срезов создаем новую строку, состоящую из текущего символа и 5 последующих за ним.
    if st==st[::-1]:#палиндром - строка, что слева направо и справа налево читается одинаково, поэтому переворачиваем и проверяем, является ли наша строка подходящей под условие.
        k+=1#если подстрока является палиндромом, счетчик увеличивается на 1
print(k)



#3

f=open('24_3.txt')#открываем файл
s=f.readline()#считываем файл
IndexT=10**10#чтобы "i-IndexT+1>=12"(находится дальше в коде) правильно сработало в первый раз,
#необходимо, чтобы разность индексов была, например, отрицательной, потому что при IndexT=0 программа работать не будет, ведь до первого случая мы не встречали букв T, из-за этого и будут проблемы.
#Поэтому берем очень большое число
IndexV=0#значение этого индекса может быть любым числом, значение не влияет на результат
k=0#создаем счетчик
for i in range(len(s)):#проходимся по нашей строке
    if s[i]=='V': 
        IndexV=i #если символ является буквой V, то запоминаем индекс буквы
    if s[i]=='T':
        if i-IndexT+1>=12: #проверяем подходит ли длина нашей подстроки под условие
            if IndexT>IndexV:#индекс буквы V не должен быть больше индекса T, иначе V будет внутри подстроки, нам это не нужно
                k+=1 #Увеличиваем на 1 счетчик
        IndexT=i #сразу после всех проверок запоминаем индекс буквы T
print(k)
